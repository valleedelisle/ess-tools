# This file is a template, and might need editing before it works on your project.
image: valleedelisle/openshift-cli-python

stages:
  - build  # dummy stage to follow the template guidelines
  - test
  - deploy  # dummy stage to follow the template guidelines
  - review
  - staging
  - production
  - cleanup

variables:
  OPENSHIFT_SERVER: https://paas.psi.redhat.com:443
  OPENSHIFT_DOMAIN: paas.psi.redhat.com
  # Configure this variable in Secure Variables:
  # OPENSHIFT_TOKEN: my.openshift.token
test1:
  stage: test
  before_script:
    - python3.6 -m pip install -r requirements.txt
    - python3.6 -m pip install pylint --quiet
    - python3.6 -m pip install pylint-sqlalchemy --quiet
  script:
   - pylint --load-plugins pylint_sqlalchemy bug-report.py hydra-notifierd.py lib/*.py db/*
  tags:
    - docker

test2:
  stage: test
  before_script:
    - python3.6 -m pip install bandit --quiet
  script:
    - bandit -r bug-report.py hydra-notifierd.py lib/*.py -lll
  tags:
    - docker


.deploy: &deploy
  before_script:
    - oc login "$OPENSHIFT_SERVER" --token="$OPENSHIFT_TOKEN" --insecure-skip-tls-verify
    - oc project "$CI_PROJECT_NAME" 2> /dev/null || oc new-project "$CI_PROJECT_NAME"
  script:
    - echo "$APP"
    - oc get services $APP 2> /dev/null || oc new-app openshift/templates/ess-notifier.yaml --name=$APP -e NAME=$APP
      #oc new-app openshift/templates/python-mariadb-persistent.yaml --name notifier -e JWT_REFRESH_TOKEN=$JWT_REFRESH_TOKEN
      #- oc start-build $APP --from-dir=. --follow || sleep 3s && oc start-build $APP --from-dir=. --follow
  tags:
    - docker

review:
  <<: *deploy
  stage: review
  variables:
    APP: review-$CI_COMMIT_REF_NAME
    APP_HOST: $CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$OPENSHIFT_DOMAIN
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://$CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$OPENSHIFT_DOMAIN
    on_stop: stop-review
  only:
    - branches
  except:
    - master
  tags:
    - docker

stop-review:
  <<: *deploy
  stage: cleanup
  script:
    - oc delete all -l "app=$APP"
  when: manual
  variables:
    APP: review-$CI_COMMIT_REF_NAME
    GIT_STRATEGY: none
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only:
    - branches
  except:
    - master
  tags:
    - docker

staging:
  <<: *deploy
  stage: staging
  variables:
    APP: staging-ess-notifier
    APP_HOST: $CI_PROJECT_NAME-staging.$OPENSHIFT_DOMAIN
  environment:
    name: staging
    url: http://$CI_PROJECT_NAME-staging.$OPENSHIFT_DOMAIN
  only:
    - master
  tags:
    - docker

production:
  <<: *deploy
  stage: production
  variables:
    APP: ess-notifier
    APP_HOST: $CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
  when: manual
  environment:
    name: production
    url: http://$CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
  only:
    - master
  tags:
    - docker
